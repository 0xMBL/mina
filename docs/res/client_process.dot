digraph client_process {
    subgraph cluster_0 {
		style=filled;
		color=lightgrey;
		node [style=filled,color=white];
		transition_frontier [label="transition frontier"];
        transaction_pool [label="transaction pool"];
		label = "daemon";
	}

    subgraph cluster_1 {
		style=filled;
		color=lightgrey;

		node [style=filled,color=white];

        subgraph cluster_3 {
            style=filled;
            color=white
            node [style=filled,color=lightgrey];
                transition_frontier_copy [label="Transition frontier handler"];
                in_memory_receipt_chain_table [label="receipt chain hashes"];
                in_memory_transition_to_transaction_table [label="transition to transaction"];
                in_memory_transactions [label="transactions"]
            label = "In Memory Cache (Client's Transition Frontier)"
        }

        subgraph cluster_2 {
            style=filled;
            color=white
            node [style=filled,color=lightgrey];
            external_transitions [label="external transitions"];
            user_commands [label="user commands"];
            receipt_chain_table [label="receipt chain hashes"];
            transition_to_transaction_table [label="transition to transaction"];
            transition_frontier_persistence [label="transition frontier persistence"];
            fee_transfers [label="Fee transfers"];
            label = "Database"
        }

        label = "Client";        
	}

    // maybe have an account database that tells you the nonce of the transaction so that the 
    // in_memory_transition_to_transaction_table does not have to make a lot of calls to transition_to_transaction_table
    
    transition_frontier_copy -> transition_frontier_persistence [ label="send updates to persistence database\nafter mutant diff validation" ]
    transition_frontier_copy -> in_memory_transition_to_transaction_table [ label="Add entries when adding blocks\ndelete entries when deleting transitions" ]
    transition_frontier_copy -> in_memory_receipt_chain_table [ label="Add hashes when adding blocks\ndelete hashes when deleting blocks"]
    transition_frontier_copy -> in_memory_transactions [ label="Add transactions when adding blocks\ndelete transactions when deleting blocks"]
    
    {transition_frontier_copy} -> {external_transitions, user_commands, transition_to_transaction_table, receipt_chain_table, fee_transfers} [color=purple]
    in_memory_transition_to_transaction_table -> transition_to_transaction_table  [label="Determine if any other transition \n references needs to be cached \n when a transaction gets added "]

    transaction_pool -> user_commands [label="persist all deleted user_commands"]
    transition_frontier -> transition_frontier_copy [ label="send diff" ]
    transition_frontier_copy -> transition_frontier [ label="Recover from bad diff" ]


}