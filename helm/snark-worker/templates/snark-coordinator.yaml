{{- if .Values.coordinator.active }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{tpl .Values.coordinator.fullname .}}
  labels:
    app: {{tpl .Values.coordinator.fullname .}}
spec:
  replicas: {{ .Values.numReplicas }}
  selector:
    matchLabels:
      app: {{tpl .Values.coordinator.fullname .}}
  template:
    metadata:
      labels:
        app: {{tpl .Values.coordinator.fullname .}}
        testnet: {{ .Values.testnetName }}
        role: snark-coordinator
        version: {{ trunc 6 (split ":" .Values.mina.image)._1 | trimSuffix "-" }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: {{ .Values.mina.ports.metrics | quote }}
        prometheus.io/path: '/metrics'
    spec:
      containers:
      - name: coordinator
        resources:
          limits:
          requests:
            memory: 24Gi
            cpu: 8.0
        image: {{ $.Values.mina.image }}
        args: [ "daemon",
          "-log-level", "Debug",
          "-log-json",
          "-config-directory", "/root/.mina-config",
          "-log-snark-work-gossip", "true",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)",
          "-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          "-run-snark-coordinator", "$(MINA_SNARK_KEY)",
          "-snark-worker-fee", "$(MINA_SNARK_FEE)",
          "-work-selection", "$(WORK_SELECTION)",
          "-enable-peer-exchange", "true",
          {{- if $.Values.mina.runtimeConfig }}
          "-config-file", "/config/daemon.json",
          {{- end }}
          {{- range $.Values.mina.seedPeers }}
          "-peer", {{ . | quote }},
          {{- end }}
          {{- if $.Values.mina.seedPeersURL }}
          "-peers-list-url", {{ $.Values.mina.seedPeersURL }},
          {{- end }}
          "-generate-genesis-proof", {{ .Values.mina.generateGenesisProof | quote }}
        ]
        env:
        - name: "RAYON_NUM_THREADS"
          value: "7"
        - name: DAEMON_REST_PORT
          value: {{ .Values.mina.ports.graphql | quote }}
        - name: DAEMON_CLIENT_PORT
          value: {{ .Values.mina.ports.client | quote }}
        - name: DAEMON_METRICS_PORT
          value: {{ .Values.mina.ports.metrics | quote }}
        - name: MINA_CLIENT_TRUSTLIST
          value: "10.0.0.0/8"
        - name: CONNECT_PRIVATE_IPS
          value: "true"
        - name: MINA_SNARK_KEY
          value: {{ .Values.coordinator.publicKey | quote }}
        - name: MINA_SNARK_FEE
          value: {{ .Values.coordinator.snarkFee | quote }}
        - name: DAEMON_EXTERNAL_PORT
          value: {{ .Values.mina.ports.p2p | quote }}
        - name: WORK_SELECTION
          value: {{$.Values.coordinator.workSelectionAlgorithm | quote }}
        ports:
        - name: client-port
          protocol: TCP 
          containerPort: {{ .Values.mina.ports.client }}
        - name: graphql-port
          protocol: TCP 
          containerPort: {{ .Values.mina.ports.graphql }}
        - name: metrics-port
          protocol: TCP 
          containerPort: {{ .Values.mina.ports.metrics }}
        - name: external-port
          protocol: TCP 
          containerPort: {{ .Values.mina.ports.p2p }}
          hostPort: {{ .Values.mina.ports.p2p }}
{{- include "healthcheck.snarkCoordinator.allChecks" .Values | indent 8 }}
        imagePullPolicy: Always
      {{- if .Values.mina.runtimeConfig }}
        volumeMounts:
        - name: daemon-config
          mountPath: "/config/"
      volumes:
      - name: daemon-config
        configMap:
          name: snark-coordinator-daemon-config
      {{- end }}
{{- include "nodeSelector.preemptible" .Values | indent 6 }}
{{- end }}
