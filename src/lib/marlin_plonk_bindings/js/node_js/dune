(library
 (name node_backend)
 (js_of_ocaml
  (flags (:include flags.sexp))
  (javascript_files node_backend.js))
 (instrumentation (backend bisect_ppx))
 (preprocess (pps ppx_version js_of_ocaml-ppx)))

(rule
 (targets
   plonk_wasm_bg.wasm.d.ts
   plonk_wasm_bg.wasm
   plonk_wasm.d.ts
   plonk_wasm.js
   flags.sexp)
 (deps
  (source_tree ../../wasm)
  (source_tree ../../../marlin))
 (action
  (progn
   (run chmod -R +w ../../wasm)
   (run rustup run nightly-2021-02-11 wasm-pack build --target nodejs --out-dir ../js/node_js ../../wasm)
   ;;(pipe-stdout ;; Inject fragment after the 3rd line to fix compilation
    ;;(echo "3\nnorm oimports['env']['memory'] = new WebAssembly.Memory({initial: 18, maximum: 16384, shared: true});\nx\n")
    ;;(run ex plonk_wasm.js))
   (write-file flags.sexp "()"))))
