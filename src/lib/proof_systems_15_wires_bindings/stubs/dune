(data_only_dirs src)

(dirs :standard \ target)

;; Ignore target if it exists locally

(rule
 (targets wires_15_stubs.a target)
 (deps
  Cargo.toml
  rust-toolchain.toml
  (source_tree src))
 (action
  (progn
   (setenv
    RUSTFLAGS
    "-C target-feature=+bmi2,+adx"
    (run cargo build --release))
   (run cp target/release/wires_15_stubs.a .))))

(library
 (public_name wires_15)
 (name wires_15)
 (foreign_archives marlin_plonk_stubs)
 (c_library_flags :standard "-lpthread")
 (instrumentation
  (backend bisect_ppx))
 (inline_tests)
 (preprocess
  (pps ppx_version ppx_inline_test)))

;; generate the OCaml bindings

(rule
 (target lib.ml)
 (deps
  (source_tree .))
 (action
  (run cargo +nightly run lib.ml)))
